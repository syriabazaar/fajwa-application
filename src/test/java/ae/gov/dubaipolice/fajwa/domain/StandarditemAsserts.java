package ae.gov.dubaipolice.fajwa.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StandarditemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandarditemAllPropertiesEquals(Standarditem expected, Standarditem actual) {
        assertStandarditemAutoGeneratedPropertiesEquals(expected, actual);
        assertStandarditemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandarditemAllUpdatablePropertiesEquals(Standarditem expected, Standarditem actual) {
        assertStandarditemUpdatableFieldsEquals(expected, actual);
        assertStandarditemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandarditemAutoGeneratedPropertiesEquals(Standarditem expected, Standarditem actual) {
        assertThat(actual)
            .as("Verify Standarditem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandarditemUpdatableFieldsEquals(Standarditem expected, Standarditem actual) {
        assertThat(actual)
            .as("Verify Standarditem relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getWeightPercentage()).as("check weightPercentage").isEqualTo(expected.getWeightPercentage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStandarditemUpdatableRelationshipsEquals(Standarditem expected, Standarditem actual) {
        assertThat(actual)
            .as("Verify Standarditem relationships")
            .satisfies(a -> assertThat(a.getStandardCat()).as("check standardCat").isEqualTo(expected.getStandardCat()));
    }
}
