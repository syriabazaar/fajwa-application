package ae.gov.dubaipolice.fajwa.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AppointmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentAllPropertiesEquals(Appointment expected, Appointment actual) {
        assertAppointmentAutoGeneratedPropertiesEquals(expected, actual);
        assertAppointmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentAllUpdatablePropertiesEquals(Appointment expected, Appointment actual) {
        assertAppointmentUpdatableFieldsEquals(expected, actual);
        assertAppointmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentAutoGeneratedPropertiesEquals(Appointment expected, Appointment actual) {
        assertThat(actual)
            .as("Verify Appointment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentUpdatableFieldsEquals(Appointment expected, Appointment actual) {
        assertThat(actual)
            .as("Verify Appointment relevant properties")
            .satisfies(a -> assertThat(a.getAppDateTime()).as("check appDateTime").isEqualTo(expected.getAppDateTime()))
            .satisfies(a -> assertThat(a.getInterveiewDate()).as("check interveiewDate").isEqualTo(expected.getInterveiewDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppointmentUpdatableRelationshipsEquals(Appointment expected, Appointment actual) {
        assertThat(actual)
            .as("Verify Appointment relationships")
            .satisfies(a -> assertThat(a.getNomination()).as("check nomination").isEqualTo(expected.getNomination()));
    }
}
